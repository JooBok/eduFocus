# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: saliency
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: saliency
#   template:
#     metadata:
#       labels:
#         app: saliency
#     spec:
#       containers:
#       - name: saliency
#         image: joobok/mongo:v1.0  # Docker Hub 또는 다른 레지스트리에 업로드한 이미지
#         ports:
#         - containerPort: 80  # 필요한 경우 포트 수정
#         env:
#         - name: MONGODB_USERNAME
#           valueFrom:
#             configMapKeyRef:
#               name: app-config
#               key: MONGODB_USERNAME
#         - name: MONGODB_PASSWORD
#           valueFrom:
#             configMapKeyRef:
#               name: app-config
#               key: MONGODB_PASSWORD
#         - name: MONGODB_HOST
#           value: mongodb
#         - name: MONGODB_PORT
#           value: "27017"
#         - name: MONGODB_DB
#           valueFrom:
#             configMapKeyRef:
#               name: app-config
#               key: MONGODB_DB
#         volumeMounts:
#         - name: app-volume
#           mountPath: /app  # 컨테이너 내부의 애플리케이션 경로
#         - name: contents-volume
#           mountPath: /app/contents  # 컨테이너 내부의 컨텐츠 경로
#       volumes:
#       - name: app-volume
#         hostPath:
#           path: /home/bok/eduFocus/bok/service_kub/application  # 로컬 애플리케이션 경로
#           type: DirectoryOrCreate
#       - name: contents-volume
#         hostPath:
#           path: /home/bok/eduFocus/bok/service_kub/contents  # 로컬 컨텐츠 경로
#           type: DirectoryOrCrate

# ---

# apiVersion: v1
# kind: Service
# metadata:
#   name: saliency
# spec:
#   ports:
#   - port: 80
#     targetPort: 80
#   selector:
#     app: saliency



###################################################################

# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: saliency
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: saliency
#   template:
#     metadata:
#       labels:
#         app: saliency
#     spec:
#       initContainers:
#       - name: init-debug
#         image: busybox
#         command: ['sh', '-c', 'sleep 3600']
#         volumeMounts:
#         - name: application-volume
#           mountPath: /app
#         - name: contents-volume
#           mountPath: /app/contents
#       containers:
#       - name: saliency
#         image: joobok/mongo:v1.0  # Docker Hub에서 사용할 이미지
#         ports:
#         - containerPort: 80
#         env:
#         - name: MONGODB_USERNAME
#           valueFrom:
#             configMapKeyRef:
#               name: app-config
#               key: MONGODB_USERNAME
#         - name: MONGODB_PASSWORD
#           valueFrom:
#             configMapKeyRef:
#               name: app-config
#               key: MONGODB_PASSWORD
#         - name: MONGODB_HOST
#           value: mongodb
#         - name: MONGODB_PORT
#           value: "27017"
#         - name: MONGODB_DB
#           valueFrom:
#             configMapKeyRef:
#               name: app-config
#               key: MONGODB_DB
#         volumeMounts:
#         - name: application-volume
#           mountPath: /app  # 컨테이너 내부 경로
#         - name: contents-volume
#           mountPath: /app/contents  # 컨테이너 내부 경로
#       volumes:
#       - name: application-volume
#         persistentVolumeClaim:
#           claimName: application-pvc
#       - name: contents-volume
#         persistentVolumeClaim:
#           claimName: contents-pvc

# ---

# apiVersion: v1
# kind: Service
# metadata:
#   name: saliency
# spec:
#   selector:
#     app: saliency
#   ports:
#   - port: 80
#     targetPort: 80

#####################################

apiVersion: apps/v1
kind: Deployment
metadata:
  name: saliency
  labels:
    app: saliency
spec:
  replicas: 1
  selector:
    matchLabels:
      app: saliency
  template:
    metadata:
      labels:
        app: saliency
    spec:
      containers:
      - name: saliency
        image: joobok/mongo:v1.0
        imagePullPolicy: Always
        ports:
        - containerPort: 80
        env:
        - name: MONGODB_USERNAME
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: MONGODB_USERNAME
        - name: MONGODB_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: MONGODB_PASSWORD
        - name: MONGODB_HOST
          value: mongodb
        - name: MONGODB_PORT
          value: "27017"
        - name: MONGODB_DB
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: MONGODB_DB
        volumeMounts:
        - name: application-pv
          mountPath: /app
        - name: contents-pv
          mountPath: /app/contents
      volumes:
      - name: application-pv
        persistentVolumeClaim:
          claimName: application-pvc
      - name: contents-pv
        persistentVolumeClaim:
          claimName: contents-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: saliency
spec:
  selector:
    app: saliency
  ports:
  - port: 80
    targetPort: 80
